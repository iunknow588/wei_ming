{"version":3,"file":"node_modules\\solarlunar\\src\\solarLunar.js","names":["lunarInfo","solarMonth","gan","zhi","animals","lunarTerm","lTermInfo","nStr1","nStr2","nStr3","nStr4","solarLunar","lYearDays","y","i","sum","leapDays","leapMonth","monthDays","m","solarDays","ms","toGanZhi","offset","getTerm","n","_table","_info","parseInt","substr","toString","_calDay","toChinaYear","oxxx","xoxx","xxox","xxxo","toChinaMonth","s","toChinaDay","d","Math","floor","getAnimal","solar2lunar","objDate","Date","temp","getFullYear","getMonth","getDate","UTC","isTodayObj","isToday","nWeek","getDay","cWeek","year","leap","isLeap","month","day","sm","term3","gzY","termTimestamp","getTime","firstNode","secondNode","gzM","isTerm","term","dayCyclical","gzD","lYear","lMonth","lDay","animal","yearCn","monthCn","dayCn","cYear","cMonth","cDay","gzYear","gzMonth","gzDay","ncWeek","lunar2solar","isLeapMonth","isAdd","stmap","calObj","cY","getUTCFullYear","cM","getUTCMonth","cD","getUTCDate"],"sources":["node_modules\\solarlunar\\src\\solarLunar.js"],"sourcesContent":["/**\n * @1900-2100区间内的公历、农历互转\n * @charset  UTF-8\n * @author  Ajing(JJonline@JJonline.Cn)\n * @Time  2014-7-21\n * @Version  $ID$\n * @公历转农历：solarLunar.solar2lunar(1987,11,01); //[you can ignore params of prefix 0]\n * @农历转公历：solarLunar.lunar2solar(1987,09,10); //[you can ignore params of prefix 0]\n * @link http://blog.jjonline.cn/userInterFace/173.html\n */\n\nimport lunarInfo from '../const/lunarInfo';\nimport solarMonth from '../const/solarMonth';\nimport gan from '../const/gan';\nimport zhi from '../const/zhi';\nimport animals from '../const/animals';\nimport lunarTerm from '../const/lunarTerm';\nimport lTermInfo from '../const/lTermInfo';\nimport nStr1 from '../const/nStr1';\nimport nStr2 from '../const/nStr2';\nimport nStr3 from '../const/nStr3';\nimport nStr4 from '../const/nStr4';\n\nconst solarLunar = {\n  lunarInfo,\n  solarMonth,\n  gan,\n  zhi,\n  animals,\n  lunarTerm,\n  lTermInfo,\n  nStr1,\n  nStr2,\n  nStr3,\n  nStr4,\n  /**\n   * 返回农历y年一整年的总天数\n   * @param lunar Year\n   * @return Number\n   * @eg:var count = solarLunar.lYearDays(1987) ;//count=387\n   */\n  lYearDays: function (y) {\n    var i, sum = 348;\n    for (i = 0x8000; i > 0x8; i >>= 1) {\n      sum += (solarLunar.lunarInfo[y - 1900] & i) ? 1 : 0;\n    }\n    return (sum + solarLunar.leapDays(y));\n  },\n\n\n  /**\n   * 返回农历y年闰月是哪个月；若y年没有闰月 则返回0\n   * @param lunar Year\n   * @return Number (0-12)\n   * @eg:var leapMonth = solarLunar.leapMonth(1987) ;//leapMonth=6\n   */\n  leapMonth: function (y) { //闰字编码 \\u95f0\n    return (solarLunar.lunarInfo[y - 1900] & 0xf);\n  },\n\n\n  /**\n   * 返回农历y年闰月的天数 若该年没有闰月则返回0\n   * @param lunar Year\n   * @return Number (0、29、30)\n   * @eg:var leapMonthDay = solarLunar.leapDays(1987) ;//leapMonthDay=29\n   */\n  leapDays: function (y) {\n    if (solarLunar.leapMonth(y)) {\n      return ((solarLunar.lunarInfo[y - 1900] & 0x10000) ? 30 : 29);\n    }\n    return (0);\n  },\n\n\n  /**\n   * 返回农历 y 年 m 月（非闰月）的总天数，计算 m 为闰月时的天数请使用 leapDays 方法\n   * @param lunar Year\n   * @return Number (-1、29、30)\n   * @eg:var MonthDay = solarLunar.monthDays(1987,9) ;//MonthDay=29\n   */\n  monthDays: function (y, m) {\n    if (m > 12 || m < 1) {\n      return -1;\n    }//月份参数从1至12，参数错误返回-1\n    return ((solarLunar.lunarInfo[y - 1900] & (0x10000 >> m)) ? 30 : 29);\n  },\n\n\n  /**\n   * 返回公历(!)y年m月的天数\n   * @param solar Year\n   * @return Number (-1、28、29、30、31)\n   * @eg:var solarMonthDay = solarLunar.leapDays(1987) ;//solarMonthDay=30\n   */\n  solarDays: function (y, m) {\n    if (m > 12 || m < 1) {\n      return -1;\n    } //若参数错误 返回-1\n    var ms = m - 1;\n    if (ms == 1) { //2月份的闰平规律测算后确认返回28或29\n      return (((y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0)) ? 29 : 28);\n    } else {\n      return (solarLunar.solarMonth[ms]);\n    }\n  },\n\n\n  /**\n   * 传入offset偏移量返回干支\n   * @param offset 相对甲子的偏移量\n   * @return Cn string\n   */\n  toGanZhi: function (offset) {\n    return (solarLunar.gan[offset % 10] + solarLunar.zhi[offset % 12]);\n  },\n\n\n  /**\n   * 传入公历(!) y 年获得该年第 n 个节气的公历日期\n   * @param y公历年(1900-2100)；n二十四节气中的第几个节气(1~24)；从n=1(小寒)算起\n   * @return number Number\n   * @eg:var _24 = solarLunar.getTerm(1987,3) ;//_24=4;意即1987年2月4日立春\n   */\n  getTerm: function (y, n) {\n    if (y < 1900 || y > 2100) {\n      return -1;\n    }\n    if (n < 1 || n > 24) {\n      return -1;\n    }\n    var _table = solarLunar.lTermInfo[y - 1900];\n    var _info = [\n      parseInt('0x' + _table.substr(0, 5)).toString(),\n      parseInt('0x' + _table.substr(5, 5)).toString(),\n      parseInt('0x' + _table.substr(10, 5)).toString(),\n      parseInt('0x' + _table.substr(15, 5)).toString(),\n      parseInt('0x' + _table.substr(20, 5)).toString(),\n      parseInt('0x' + _table.substr(25, 5)).toString()\n    ];\n    var _calDay = [\n      _info[0].substr(0, 1),\n      _info[0].substr(1, 2),\n      _info[0].substr(3, 1),\n      _info[0].substr(4, 2),\n\n      _info[1].substr(0, 1),\n      _info[1].substr(1, 2),\n      _info[1].substr(3, 1),\n      _info[1].substr(4, 2),\n\n      _info[2].substr(0, 1),\n      _info[2].substr(1, 2),\n      _info[2].substr(3, 1),\n      _info[2].substr(4, 2),\n\n      _info[3].substr(0, 1),\n      _info[3].substr(1, 2),\n      _info[3].substr(3, 1),\n      _info[3].substr(4, 2),\n\n      _info[4].substr(0, 1),\n      _info[4].substr(1, 2),\n      _info[4].substr(3, 1),\n      _info[4].substr(4, 2),\n\n      _info[5].substr(0, 1),\n      _info[5].substr(1, 2),\n      _info[5].substr(3, 1),\n      _info[5].substr(4, 2)\n    ];\n    return parseInt(_calDay[n - 1]);\n  },\n\n  /**\n   * 传入农历年份数字返回汉语通俗表示法\n   * @param lunar year\n   * @return string\n   * @eg:\n   */\n  toChinaYear: function (y) { //年 => \\u5E74\n    var oxxx = parseInt(y / 1000);\n    var xoxx = parseInt(y % 1000 / 100);\n    var xxox = parseInt(y % 100 / 10);\n    var xxxo = y % 10;\n\n    return solarLunar.nStr4[oxxx] + solarLunar.nStr4[xoxx] + solarLunar.nStr4[xxox] + solarLunar.nStr4[xxxo] + \"\\u5E74\";\n  },\n\n  /**\n   * 传入农历数字月份返回汉语通俗表示法\n   * @param lunar month\n   * @return number string\n   * @eg:var cnMonth = solarLunar.toChinaMonth(12) ;//cnMonth='腊月'\n   */\n  toChinaMonth: function (m) { // 月 => \\u6708\n    if (m > 12 || m < 1) {\n      return -1;\n    } //若参数错误 返回-1\n    var s = solarLunar.nStr3[m - 1];\n    s += \"\\u6708\";//加上月字\n    return s;\n  },\n\n\n  /**\n   * 传入农历日期数字返回汉字表示法\n   * @param lunar day\n   * @return Cn string\n   * @eg:var cnDay = solarLunar.toChinaDay(21) ;//cnMonth='廿一'\n   */\n  toChinaDay: function (d) { //日 => \\u65e5\n    var s;\n    switch (d) {\n      case 10:\n        s = '\\u521d\\u5341';\n        break;\n      case 20:\n        s = '\\u4e8c\\u5341';\n        break;\n        break;\n      case 30:\n        s = '\\u4e09\\u5341';\n        break;\n        break;\n      default:\n        s = solarLunar.nStr2[Math.floor(d / 10)];\n        s += solarLunar.nStr1[d % 10];\n    }\n    return (s);\n  },\n\n\n  /**\n   * 年份转生肖[!仅能大致转换] => 精确划分生肖分界线是“立春”\n   * @param y year\n   * @return Cn string\n   * @eg:var animal = solarLunar.getAnimal(1987) ;//animal='兔'\n   * todo 生肖需要精确转换\n   */\n  getAnimal: function (y) {\n    return solarLunar.animals[(y - 4) % 12];\n  },\n\n\n  /**\n   * 传入公历年月日获得详细的公历、农历object信息 <=>JSON\n   * @param y  solar year\n   * @param m solar month\n   * @param d  solar day\n   * @return JSON object\n   * @eg:console.log(solarLunar.solar2lunar(1987,11,01));\n   */\n  solar2lunar: function (y, m, d) { //参数区间1900.1.31~2100.12.31\n    if (y < 1900 || y > 2100) {\n      return -1;\n    }//年份限定、上限\n    if (y == 1900 && m == 1 && d < 31) {\n      return -1;\n    }//下限\n    if (!y) { //未传参 获得当天\n      var objDate = new Date();\n    } else {\n      var objDate = new Date(y, parseInt(m) - 1, d);\n    }\n    var i, leap = 0, temp = 0;\n    //修正ymd参数\n    var y = objDate.getFullYear(), m = objDate.getMonth() + 1, d = objDate.getDate();\n    var offset = (Date.UTC(objDate.getFullYear(), objDate.getMonth(), objDate.getDate()) - Date.UTC(1900, 0, 31)) / 86400000;\n    for (i = 1900; i < 2101 && offset > 0; i++) {\n      temp = solarLunar.lYearDays(i);\n      offset -= temp;\n    }\n    if (offset < 0) {\n      offset += temp;\n      i--;\n    }\n\n    //是否今天\n    var isTodayObj = new Date(), isToday = false;\n    if (isTodayObj.getFullYear() == y && isTodayObj.getMonth() + 1 == m && isTodayObj.getDate() == d) {\n      isToday = true;\n    }\n    //星期几\n    var nWeek = objDate.getDay(), cWeek = solarLunar.nStr1[nWeek];\n    if (nWeek == 0) {\n      nWeek = 7;\n    }//数字表示周几顺应天朝周一开始的惯例\n    //农历年\n    var year = i;\n\n    var leap = solarLunar.leapMonth(i); //闰哪个月\n\n    var isLeap = false;\n    \n    //效验闰月\n    for (i = 1; i < 13 && offset > 0; i++) {\n      //闰月\n      if (leap > 0 && i == (leap + 1) && isLeap == false) {\n        --i;\n        isLeap = true;\n        temp = solarLunar.leapDays(year); //计算农历闰月天数\n      }\n      else {\n        temp = solarLunar.monthDays(year, i);//计算农历普通月天数\n      }\n      //解除闰月\n      if (isLeap == true && i == (leap + 1)) {\n        isLeap = false;\n      }\n      offset -= temp;\n    }\n\n    if (offset == 0 && leap > 0 && i == leap + 1)\n      if (isLeap) {\n        isLeap = false;\n      } else {\n        isLeap = true;\n        --i;\n      }\n    if (offset < 0) {\n      offset += temp;\n      --i;\n    }\n    //农历月\n    var month = i;\n    //农历日\n    var day = offset + 1;\n\n    //天干地支处理\n    var sm = m - 1;\n    var term3 = solarLunar.getTerm(y, 3); //该公历年立春日期\n    var gzY = solarLunar.toGanZhi(y - 4);//普通按年份计算，下方尚需按立春节气来修正\n    var termTimestamp = new Date(y, 1, term3).getTime();\n    var dayTimestamp = new Date(y, sm, d).getTime();\n    //依据立春日进行修正gzY\n    if (dayTimestamp < termTimestamp) {\n      gzY = solarLunar.toGanZhi(y - 5);\n    }\n\n    //月柱 1900年1月小寒以前为 丙子月(60进制12)\n    var firstNode = solarLunar.getTerm(y, (m * 2 - 1));//返回当月「节」为几日开始\n    var secondNode = solarLunar.getTerm(y, (m * 2));//返回当月「节」为几日开始\n\n    //依据12节气修正干支月\n    var gzM = solarLunar.toGanZhi((y - 1900) * 12 + m + 11);\n    if (d >= firstNode) {\n      gzM = solarLunar.toGanZhi((y - 1900) * 12 + m + 12);\n    }\n\n    //传入的日期的节气与否\n    var isTerm = false;\n    var term = \"\";\n    if (firstNode == d) {\n      isTerm = true;\n      term = solarLunar.lunarTerm[m * 2 - 2];\n    }\n    if (secondNode == d) {\n      isTerm = true;\n      term = solarLunar.lunarTerm[m * 2 - 1];\n    }\n    //日柱 当月一日与 1900/1/1 相差天数\n    var dayCyclical = Date.UTC(y, sm, 1, 0, 0, 0, 0) / 86400000 + 25567 + 10;\n    var gzD = solarLunar.toGanZhi(dayCyclical + d - 1);\n    return {\n      'lYear': year,\n      'lMonth': month,\n      'lDay': day,\n      'animal': solarLunar.getAnimal(year),\n      'yearCn': solarLunar.toChinaYear(year),\n      'monthCn': (isLeap && leap === month ? \"\\u95f0\" : '') + solarLunar.toChinaMonth(month),\n      'dayCn': solarLunar.toChinaDay(day),\n      'cYear': y,\n      'cMonth': m,\n      'cDay': d,\n      'gzYear': gzY,\n      'gzMonth': gzM,\n      'gzDay': gzD,\n      'isToday': isToday,\n      'isLeap': isLeap,\n      'nWeek': nWeek,\n      'ncWeek': \"\\u661f\\u671f\" + cWeek,\n      'isTerm': isTerm,\n      'term': term\n    };\n  },\n\n\n  /**\n   * 传入公历年月日以及传入的月份是否闰月获得详细的公历、农历object信息 <=>JSON\n   * @param y  lunar year\n   * @param m lunar month\n   * @param d  lunar day\n   * @param isLeapMonth  lunar month is leap or not.\n   * @return JSON object\n   * @eg:console.log(solarLunar.lunar2solar(1987,9,10));\n   */\n  lunar2solar: function (y, m, d, isLeapMonth) {\t//参数区间1900.1.31~2100.12.1\n    var leapOffset = 0;\n    var leapMonth = solarLunar.leapMonth(y);\n    var leapDay = solarLunar.leapDays(y);\n    if (isLeapMonth && (leapMonth != m)) {\n      return -1;\n    }//传参要求计算该闰月公历 但该年得出的闰月与传参的月份并不同\n    if (y == 2100 && m == 12 && d > 1 || y == 1900 && m == 1 && d < 31) {\n      return -1;\n    }//超出了最大极限值\n    var day = solarLunar.monthDays(y, m);\n    if (y < 1900 || y > 2100 || d > day) {\n      return -1;\n    }//参数合法性效验\n\n    //计算农历的时间差\n    var offset = 0;\n    for (var i = 1900; i < y; i++) {\n      offset += solarLunar.lYearDays(i);\n    }\n    var leap = 0, isAdd = false;\n    for (var i = 1; i < m; i++) {\n      leap = solarLunar.leapMonth(y);\n      if (!isAdd) {//处理闰月\n        if (leap <= i && leap > 0) {\n          offset += solarLunar.leapDays(y);\n          isAdd = true;\n        }\n      }\n      offset += solarLunar.monthDays(y, i);\n    }\n    //转换闰月农历 需补充该年闰月的前一个月的时差\n    if (isLeapMonth) {\n      offset += day;\n    }\n    //1900年农历正月一日的公历时间为1900年1月30日0时0分0秒(该时间也是本农历的最开始起始点)\n    var stmap = Date.UTC(1900, 1, 30, 0, 0, 0);\n    var calObj = new Date((offset + d - 31) * 86400000 + stmap);\n    var cY = calObj.getUTCFullYear();\n    var cM = calObj.getUTCMonth() + 1;\n    var cD = calObj.getUTCDate();\n\n    return solarLunar.solar2lunar(cY, cM, cD);\n  }\n};\n\nexport default solarLunar;\n"],"mappings":"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","ignoreList":[]}